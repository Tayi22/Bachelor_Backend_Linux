{"_id":{"$oid":"57eb908d9d70c1b42c956280"},"info":"Encrypted Storage beschäftigt sich mit dem Problem der gespeicherten sensiblen Daten und deren Vertraulichkeit. Grundsätzlich sollten sensible Daten niemals in Klartext am Server gespeichert werden sondern stets in verschlüsselter Form. Im Falle eines Datendiebstahls bleiben die Daten weitgehend vertraulich. ","name":"Encrypted Storage","relatedPatternIds":[],"mappingIds":[{"$oid":"57eb92949d70c1b42c956281"}],"__v":0}
{"_id":{"$oid":"57ebaa7f0779fe283e391b11"},"info":"Zeitweise ist es notwendig Daten auf Seiten der Benutzer auszulagern. Dies führt zu einem Problem wenn der User diese Daten einsieht oder verändert. Client Data Storage bietet Vorgehensweisen die Daten welche auf Seiten der Benutzer gespeichert sind zu verschlüssel und zu überprüfen, ob diese verändert wurden. Dieses Pattern steht zudem in enger Relation mit dem Pattern Client Input Filter. ","name":"Client Data Storage","relatedPatternIds":[],"mappingIds":[{"$oid":"57ebaad40779fe283e391b12"},{"$oid":"57ebacb00779fe283e391b13"}],"__v":0}
{"_id":{"$oid":"57ebd3680cdf9d5811209e61"},"info":"Der Client Input Filter unterbricht jede Anfrage auf das System und überprüft diese. Durch verschiedene Regeln wird die Anfrage weitergeleitet oder mit einem Fehler zurückgeschickt. Somit können keine manipulierten Anfragen auf das System gelangen. ","name":"Client Input Filter","relatedPatternIds":[],"mappingIds":[{"$oid":"57ebd3a60cdf9d5811209e62"}],"__v":0}
{"_id":{"$oid":"57ebd8510cdf9d5811209e66"},"info":"Unterbricht eine Anfrage auf das interne System und überprüft, welche Berechtigungen der Benutzer auf dem System hat. Er leitet entweder die Anfrage weiter wenn der Benutzer die erforderlichen Rechte hat oder schickt die Anfrage zurück.","name":"Reference Monitor","relatedPatternIds":[],"mappingIds":[{"$oid":"57ebd97f0cdf9d5811209e67"},{"$oid":"57eccb0da1eb91bd3f550360"}],"__v":0}
{"_id":{"$oid":"57eb9753fe4c1fff31912801"},"info":"Hidden Implementation gibt Richtlinien vor, wie Informationen eines Systems nach außen hin angezeigt werden sollten. Beispielsweise soll es nicht möglich sein, Informationen über den verwendeten Server oder der verwendeten Datenbank von außen einzussehen. Auch sollten in der URL keine Hinweise darauf sein, welche Dateiformate verwendet werden (.js .jsp etc). ","name":"Hidden Implementation","relatedPatternIds":[],"mappingIds":[{"$oid":"57eba9c50779fe283e391b10"}],"__v":0}
{"_id":{"$oid":"57ebd2580cdf9d5811209e5f"},"info":"Beschränkt den Zugriff auf ein System. Es gibt nur eine einzige Möglichkeit auf den Server zuzugreifen. ","name":"Single Access Point","relatedPatternIds":[],"mappingIds":[{"$oid":"57ebd2be0cdf9d5811209e60"}],"__v":0}
{"_id":{"$oid":"57ec23d80cdf9d5811209e79"},"info":"Access Matrix ist ein fundamentales Access Control Model, das verwendet wird, um Zugriffsrechte von Usern auf Objekte in einem System zu speichern. Die Datenstruktur ist eine Matrix, deren Achsen User und Objekte sind. Eine Zelle dieser Matrix repräsentiert die Zugriffsinformationen eines Users auf ein Objekt.","name":"Access Matrix","relatedPatternIds":[],"mappingIds":[],"__v":0}
{"_id":{"$oid":"57ecd530a1eb91bd3f550361"},"info":"Nach erfolgreicher Authentiﬁzierung mittels eines Authentication Protocol vergibt der Authenticator einen Proof of Identity (häuﬁg in Form eines sogenannten Tokens) an den Clienten, der seine Identität bei der Anfrage auf Ressourcen im System bestätigt. Ein Proof of Identity muss Informationen enthalten, um an deren Services des Systems die Veriﬁkation der Gültigkeit und der Dauer der Gültigkeit der Identität eines Akteurs zu ermöglichen.","name":"Authenticator","relatedPatternIds":[],"mappingIds":[{"$oid":"57ecd615a1eb91bd3f550362"}],"__v":0}
{"_id":{"$oid":"57ecde1cbdc9d77c4bd14c7c"},"info":"ACL Info","name":"ACL","relatedPatternIds":[],"mappingIds":[{"$oid":"57ecde2ebdc9d77c4bd14c7d"}],"__v":0}
